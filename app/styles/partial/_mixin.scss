@import "addons/triangle";

//
// Mixins
// --------------------------------------------------

@mixin desktop {
  @media only screen and (min-width: $desktop-min-width) {
    @content;
  }
}

@mixin touch {
  @media only screen and (max-width: $desktop-min-width - 1) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (min-width: $tablet-min-width) and (max-width: $desktop-min-width - 1) {
    @content;
  }
}

@mixin mobile {
  @media only screen and (max-width: $tablet-min-width - 1) {
    @content;
  }
}

// 保证 background 图片的宽高比不变
// 需要将这个 div 的 width 设置成 100%
@mixin fix-bg-size ($width, $height, $src) {
  width: 100%;
  height: 0;
  padding-top: unquote((($height / $width) * 100) + '%');
  background: url($src) no-repeat;
  background-size: 100%;
}

// 背景图片
@mixin bg($file, $horizontal, $vertical, $bg-color: false) {
  @if $bg-color {
    background: $bg-color url($file) no-repeat $horizontal $vertical;
  } @else {
    background: url($file) no-repeat $horizontal $vertical;
  }

  background-size: round(image-width($file) / 2) round(image-height($file) / 2);
}


// 伪类占滿父类
// 父类需要设置 position
@mixin pseudo-absolute {
  content: " ";
  display: block;
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}



// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// 定位
@mixin position($top: false, $right: false, $bottom: false, $left: false) {
  @if $top != false {
    top: #{$top};
  }
  @if $right != false {
    right: #{$right};
  }
  @if $bottom != false {
    bottom: #{$bottom};
  }
  @if $left != false {
    left: #{$left};
  }
}

// 垂直水平居中
@mixin center-absolute() {
  display: block;
  position: absolute;
  margin: auto;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Center-align a block level element
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Sizing shortcuts
@mixin size($width, $height, $radius: false) {
  width: $width;
  height: $height;
  @if $radius == true {
    border-radius: 50%;
  } @else if $radius {
    border-radius: $radius;
  }
}

@mixin square($size, $radius: false) {
  @include size($size, $size, $radius);

}

// image-height/width came from compass function
@mixin image-dimensions($file) {
  height: image-height($file);
  width: image-width($file);
}


// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  &:-moz-placeholder            { color: $color; } // Firefox 4-18
  &::-moz-placeholder           { color: $color;   // Firefox 19+
                                  opacity: 1; } // See https://github.com/twbs/bootstrap/pull/11526
  &:-ms-input-placeholder       { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

// Text overflow
// Requires inline-block or block for proper styling
@mixin text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
@mixin text-hide() {
  font: #{0/0} a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}



// CSS3 PROPERTIES
// --------------------------------------------------

// Single side border-radius
@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
}
@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
}


// Optional hyphenation
@mixin hyphens($mode: auto) {
  word-wrap: break-word;
  -webkit-hyphens: $mode;
     -moz-hyphens: $mode;
      -ms-hyphens: $mode; // IE10+
       -o-hyphens: $mode;
          hyphens: $mode;
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  //$opacity-ie: ($opacity * 100);
  //filter: #{alpha(opacity=$opacity-ie)};
}



// GRADIENTS
// --------------------------------------------------



// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin gradient-horizontal($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: -webkit-linear-gradient(left, color-stop($start-color $start-percent), color-stop($end-color $end-percent)); // Safari 5.1-6, Chrome 10+
  background-image:  linear-gradient(to right, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
// Color stops are not available in IE9 and below.
@mixin gradient-vertical($start-color: #555, $end-color: #333, $start-percent: 0%, $end-percent: 100%) {
  background-image: -webkit-linear-gradient(top, $start-color $start-percent, $end-color $end-percent);  // Safari 5.1-6, Chrome 10+
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down
}

@mixin gradient-directional($start-color: #555, $end-color: #333, $deg: 45deg) {
  background-repeat: repeat-x;
  background-image: -webkit-linear-gradient($deg, $start-color, $end-color); // Safari 5.1-6, Chrome 10+
  background-image: linear-gradient($deg, $start-color, $end-color); // Standard, IE10, Firefox 16+, Opera 12.10+, Safari 7+, Chrome 26+
}
@mixin gradient-horizontal-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: -webkit-linear-gradient(left, $start-color, $mid-color $color-stop, $end-color);
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=1); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-vertical-three-colors($start-color: #00b3ee, $mid-color: #7a43b6, $color-stop: 50%, $end-color: #c3325f) {
  background-image: -webkit-linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($start-color)}', endColorstr='#{ie-hex-str($end-color)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}
@mixin gradient-radial($inner-color: #555, $outer-color: #333) {
  background-image: -webkit-radial-gradient(circle, $inner-color, $outer-color);
  background-image: radial-gradient(circle, $inner-color, $outer-color);
  background-repeat: no-repeat;
}
@mixin gradient-striped($color: rgba(255,255,255,.15), $angle: 45deg) {
  background-image: -webkit-linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

// Reset filters for IE
//
// When you need to remove a gradient background, do not forget to use this to reset
// the IE filter for IE9 and below.
@mixin reset-filter() {
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}



// Retina images
//
// Short retina mixin for setting background-image and -size

@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url(#{$file-1x});

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url(#{$file-2x});
    background-size: $width-1x $height-1x;
  }
}

/*
 sprite 操作

  http://www.w3cplus.com/preprocessor/intermediate/spriting-with-sass-and-compass.html
  http://compass-style.org/help/tutorials/spriting/

  retina 支持：
  https://github.com/chriseppstein/compass/issues/1060
  https://github.com/chriseppstein/compass/pull/1392
  http://themestent.github.io/retina-icon-sprites/
  http://www.w3cplus.com/preprocessor/retina-icon-sprites.html

  layout = smart 会保存 sprite 中的图片的 position 都在偶数上，另外用户也要保存它的图片的宽高也是偶数
*/
// $tool-sprite-dimensions: false;  // 是否在源文件中包含长宽
// $tool-spacing: 2px;
// $tool-layout: vertical;     // vertical, horizontal, diagonal, smart
// @import "../sprites/tool/*.png";
// @include all-tool-sprites;

// 这个适合 sprite 中图片资源比较多的情况下，手动导入需要的 sprite
// @import "compass/utilities/sprites/base";
// $tool: sprite-map("../sprites/tool/*.png", $spacing: 2px, $layout: smart);
// .icon-pause {
//   background-position: sprite-position($tool, pause);
//   background-image: sprite-url($tool);
//   @include sprite-dimensions($tool, pause);
// }
$sprite-retina-map : false;
@mixin sprite-retina($icon, $selector: false, $dimension: true) {
  $tag: false;
  @if not $sprite-retina-map {
    $tag: true;
    $sprite-retina-map : sprite-map("../sprites/*.png", $layout: smart, $spacing: 2px);
  }


  $icon-name: "../sprites/#{$icon}.png";
  $sprite-name: "../../.tmp/images/gen/" + sprite-path($sprite-retina-map);

  @if $tag {
    %sprite-retina {
      background-image: sprite-url($sprite-retina-map);
      // background-size: round(image-width($sprite-name) / 2) round(image-height($sprite-name) / 2);
      background-size: round(image-width($sprite-name) / 2) auto;
      background-repeat: no-repeat;
    }
  }

  $pos: sprite-position($sprite-retina-map, $icon);
  $posx: round(nth($pos, 1)/2);
  $posy: round(nth($pos, 2)/2);

  @if not $selector { $selector: ".sprite-#{$icon}" }
  #{$selector} {
    @extend %sprite-retina;
    @if $dimension {
      width: round(image-width($icon-name)/2);
      height: round(image-height($icon-name)/2);
    }
    background-position: $posx $posy;
  }
}



// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

// Typography
// -------------------------
// [converter] $parent hack
@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color;
  }
  a#{$parent}:hover {
    color: darken($color, 10%);
  }
}


// Based on a [blog post by Ryan Fait](http://ryanfait.com/resources/footer-stick-to-bottom-of-page/).
//
// Must be mixed into the top level of your stylesheet.
//
// Footer element must be outside of root wrapper element.
//
// Footer must be a fixed height.
// 适合在 PC 端用，移动端不太适合，移动端的 footer 下还会有 body 的内容
@mixin sticky-footer($footer-height, $root-selector: unquote("#root"), $root-footer-selector: unquote(".footer-placeholder"), $footer-selector: unquote("body > footer")) {
  html, body {
    height: 100%;
  }
  #{$root-selector} {
    clear: both;
    min-height: 100%;
    height: auto !important;
    height: 100%;
    margin-bottom: -$footer-height;
    overflow: hidden;
    #{$root-footer-selector} {
      height: $footer-height;
    }
  }
  #{$footer-selector} {
    clear: both;
    position: relative;
    height: $footer-height;
  }
}


@mixin word-wrap($wrap: break-word) {
  word-wrap: $wrap;

  @if $wrap == break-word {
    overflow-wrap: break-word;
    word-break: break-all;
  }
}