// 保证 background 图片的宽高比不变
// 需要将这个 div 的 width 设置成 100%
@mixin fix-bg-size ($width, $height, $src) {
  width: 100%;
  height: 0;
  padding-top: unquote((($height / $width) * 100) + '%');
  background: url($src) no-repeat;
  background-size: 100%;
}

// 背景图片
@mixin bg($file, $horizontal, $vertical, $bg-color: false) {
  @if $bg-color {
    background: $bg-color url($file) no-repeat $horizontal $vertical;
  } @else {
    background: url($file) no-repeat $horizontal $vertical;
  }

  background-size: round(image-width($file) / 2) round(image-height($file) / 2);
}

// image-height/width came from compass function
@mixin img-dimensions($file) {
  height: image-height($file);
  width: image-width($file);
}

// Retina images
//
// Short retina mixin for setting background-image and -size

@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url(#{$file-1x});

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url(#{$file-2x});
    background-size: $width-1x $height-1x;
  }
}


// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-responsive($display: block) {
  display: $display;
  max-width: 100%; // Part 1: Set a maximum relative to the parent
  height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}


/*
 sprite 操作

  http://www.w3cplus.com/preprocessor/intermediate/spriting-with-sass-and-compass.html
  http://compass-style.org/help/tutorials/spriting/

  retina 支持：
  https://github.com/chriseppstein/compass/issues/1060
  https://github.com/chriseppstein/compass/pull/1392
  http://themestent.github.io/retina-icon-sprites/
  http://www.w3cplus.com/preprocessor/retina-icon-sprites.html

  layout = smart 会保存 sprite 中的图片的 position 都在偶数上，另外用户也要保存它的图片的宽高也是偶数
*/
// $tool-sprite-dimensions: false;  // 是否在源文件中包含长宽
// $tool-spacing: 2px;
// $tool-layout: vertical;     // vertical, horizontal, diagonal, smart
// @import "../sprites/tool/*.png";
// @include all-tool-sprites;

// 这个适合 sprite 中图片资源比较多的情况下，手动导入需要的 sprite
// @import "compass/utilities/sprites/base";
// $tool: sprite-map("../sprites/tool/*.png", $spacing: 2px, $layout: smart);
// .icon-pause {
//   background-position: sprite-position($tool, pause);
//   background-image: sprite-url($tool);
//   @include sprite-dimensions($tool, pause);
// }
$sprite-retina-map : false;
@mixin sprite-retina($icon, $selector: false, $dimension: true) {
  $tag: false;
  @if not $sprite-retina-map {
    $tag: true;
    $sprite-retina-map : sprite-map("../sprites/*.png", $layout: smart, $spacing: 2px);
  }


  $icon-name: "../sprites/#{$icon}.png";
  $sprite-name: "../../.tmp/images/gen/" + sprite-path($sprite-retina-map);

  @if $tag {
    %sprite-retina {
      background-image: sprite-url($sprite-retina-map);
      // background-size: round(image-width($sprite-name) / 2) round(image-height($sprite-name) / 2);
      background-size: round(image-width($sprite-name) / 2) auto;
      background-repeat: no-repeat;
    }
  }

  $pos: sprite-position($sprite-retina-map, $icon);
  $posx: round(nth($pos, 1)/2);
  $posy: round(nth($pos, 2)/2);

  @if not $selector { $selector: ".sprite-#{$icon}" }
  #{$selector} {
    @extend %sprite-retina;
    @if $dimension {
      width: round(image-width($icon-name)/2);
      height: round(image-height($icon-name)/2);
    }
    background-position: $posx $posy;
  }
}


